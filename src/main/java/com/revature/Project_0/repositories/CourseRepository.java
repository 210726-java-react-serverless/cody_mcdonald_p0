package com.revature.Project_0.repositories;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.revature.Project_0.documents.Course;
import com.revature.Project_0.util.MongoClientFactory;
import com.revature.Project_0.util.exceptions.DataSourceException;
import org.bson.Document;

public class CourseRepository implements CrudRepository<Course> {

    //TODO finish these to prevent duplicate courses
    public Course findCourseByName(String courseName) {
        return null;
    }

    public Course findCourseByAbbreviation(String courseAbv) {
        return null;
    }


    @Override
    public Course findByID(int id) {
        return null;
    }

    //Save the course to the database
    @Override
    public Course save(Course newCourse) {
        try {
            // Get connection
            MongoClient mongoClient = MongoClientFactory.getInstance().getConnection();
            // Access database
            MongoDatabase p0Db = mongoClient.getDatabase("p0");
            // Access collection
            MongoCollection<Document> usersCollection = p0Db.getCollection("courses");
            // Create new user document with provided values
            Document newUserDoc = new Document("courseName", newCourse.getCourseName())
                    .append("courseAbbreviation", newCourse.getCourseAbbreviation())
                    .append("courseDetail", newCourse.getCourseDetail())
                    .append("isOpen", newCourse.isOpen());
            //Insert the new user document into the database
            usersCollection.insertOne(newUserDoc);
            //Set the user's ID to the ID generated by the database.
            newCourse.setId(newUserDoc.get("_id").toString());

            return newCourse;

        } catch (Exception e) {
            e.printStackTrace(); // TODO log this to a file
            throw new DataSourceException("An unexpected exception occurred.", e);
        }
    }

    @Override
    public boolean update(Course updatedResource) {
        return false;
    }

    @Override
    public boolean deleteByID(int id) {
        return false;
    }


}
